{"ast":null,"code":"var _jsxFileName = \"/Users/Banana/Desktop/GITHUB/Front-End/src/components/Spectragraph2.js\";\n\n/* NOTES REGARDING THIS FILE:\nconnection from: https://github.com/leighsteinerlocus/d3-react-tutorial\ndocumentation on React Hooks + useEffect(): https://reactjs.org/docs/hooks-effect.html\n\nrun a npm install d3-scale?\nhttps://www.npmjs.com/package/d3-scale\n*/\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3'; //if you get an error from the line above, try: npm install --save d3\n\nimport { scaleBand, scaleLinear } from 'd3-scale';\nimport { tsvParse } from 'd3-dsv';\nimport { max } from 'd3-array';\nimport { axisBottom, axisLeft } from 'd3-axis';\nimport { select } from 'd3-selection';\nconst dataTsv = [1, 2, 3, 4, 5, 6];\nconst svgWidth = 960,\n      svgHeight = 500;\nconst x = scaleBand().rangeRound([0, width]).padding(0.1),\n      y = scaleLinear().rangeRound([height, 0]);\nconst data = tsvParse(dataTsv, d => {\n  d.frequency = +d.frequency;\n  return d;\n});\nx.domain(data.map(d => d.letter));\ny.domain([0, max(data, d => d.frequency)]); //Note: getting width and height from a variable rather than the elements attribute e.g. svg.attr(\"width\")\n\nconst margin = {\n  top: 20,\n  right: 20,\n  bottom: 30,\n  left: 40\n},\n      width = svgWidth - margin.left - margin.right,\n      height = svgHeight - margin.top - margin.bottom; //connects Instrument_Profile and Spectragraph2 files: \n\nconst Graphs = props => {\n  useEffect(() => {\n    //uses React Hook, see above links\n    d3.select('.graphs > *').remove();\n    draw(props);\n  });\n  return React.createElement(\"div\", {\n    className: \"graphs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  });\n}; // ------------------------------------------------------\n\n\nfunction drawGraph() {\n  d3.select(\"body\").append(\"span\").text(\"Let's draw the graph!\");\n}\n\nexport default (() => React.createElement(\"svg\", {\n  width: svgWidth,\n  height: svgHeight,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}, React.createElement(\"g\", {\n  transform: `translate(${margin.left}, ${margin.top})`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}, React.createElement(\"g\", {\n  className: \"axis axis--x\",\n  transform: `translate(0, ${height})`,\n  ref: node => select(node).call(axisBottom(x)),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n}), React.createElement(\"g\", {\n  className: \"axis axis--y\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, React.createElement(\"g\", {\n  ref: node => select(node).call(axisLeft(y).ticks(10, '%')),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}), React.createElement(\"text\", {\n  transform: \"rotate(-90)\",\n  y: \"6\",\n  dy: \"0.71em\",\n  textAnchor: \"end\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78\n  },\n  __self: this\n}, \"Frequency\")), data.map(d => React.createElement(\"rect\", {\n  key: d.letter,\n  className: \"bar\",\n  x: x(d.letter),\n  y: y(d.frequency),\n  width: x.bandwidth(),\n  height: height - y(d.frequency),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83\n  },\n  __self: this\n}))))); //end export default \n//what will display to the DOM: \n\n/*const draw = (props) => {\n    d3.select(\"body\").append(\"span\").text(\"Hello, world!\");\n  \n    drawGraph();\n\n} //end const draw*/\n//export default Graphs","map":{"version":3,"sources":["/Users/Banana/Desktop/GITHUB/Front-End/src/components/Spectragraph2.js"],"names":["React","useEffect","d3","scaleBand","scaleLinear","tsvParse","max","axisBottom","axisLeft","select","dataTsv","svgWidth","svgHeight","x","rangeRound","width","padding","y","height","data","d","frequency","domain","map","letter","margin","top","right","bottom","left","Graphs","props","remove","draw","drawGraph","append","text","node","call","ticks","bandwidth"],"mappings":"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","sourcesContent":["/* NOTES REGARDING THIS FILE:\nconnection from: https://github.com/leighsteinerlocus/d3-react-tutorial\ndocumentation on React Hooks + useEffect(): https://reactjs.org/docs/hooks-effect.html\n\nrun a npm install d3-scale?\nhttps://www.npmjs.com/package/d3-scale\n*/\n\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3';\n//if you get an error from the line above, try: npm install --save d3\n\nimport { scaleBand, scaleLinear } from 'd3-scale';\nimport { tsvParse } from 'd3-dsv';\nimport { max } from 'd3-array';\nimport { axisBottom, axisLeft } from 'd3-axis';\nimport { select } from 'd3-selection';\n\n\nconst dataTsv = [1,2,3,4,5,6]; \n\n\nconst svgWidth = 960,\n  svgHeight = 500;\n\n  const x = scaleBand()\n  .rangeRound([0, width])\n  .padding(0.1),\ny = scaleLinear().rangeRound([height, 0]);\n\nconst data = tsvParse(dataTsv, d => {\nd.frequency = +d.frequency;\nreturn d;\n});\n\nx.domain(data.map(d => d.letter));\ny.domain([0, max(data, d => d.frequency)]);\n\n//Note: getting width and height from a variable rather than the elements attribute e.g. svg.attr(\"width\")\nconst margin = { top: 20, right: 20, bottom: 30, left: 40 },\n  width = svgWidth - margin.left - margin.right,\n  height = svgHeight - margin.top - margin.bottom;\n\n\n\n//connects Instrument_Profile and Spectragraph2 files: \nconst Graphs = (props) => {\n    useEffect(() => { //uses React Hook, see above links\n     d3.select('.graphs > *').remove();\n     draw(props)\n   }, )\n    return <div className=\"graphs\" />\n  }\n// ------------------------------------------------------\n\n  \n\nfunction drawGraph() {\n    d3.select(\"body\").append(\"span\").text(\"Let's draw the graph!\");\n\n}\n\nexport default () => (\n  <svg width={svgWidth} height={svgHeight}>\n    <g transform={`translate(${margin.left}, ${margin.top})`}>\n      <g\n        className=\"axis axis--x\"\n        transform={`translate(0, ${height})`}\n        ref={node => select(node).call(axisBottom(x))}\n      />\n      <g className=\"axis axis--y\">\n        <g ref={node => select(node).call(axisLeft(y).ticks(10, '%'))} />\n        {/* Note: In the actual example 'Frequency' is a child of the above 'g' and it doesn't render. \n          * Changing it to a sibiling allows it to render and having the axis as an empty 'g' means that it will also play nicer with react:\n          * \"The easiest way to avoid conflicts is to prevent the React component from updating. You can do this by rendering elements that React has no reason to update, like an empty <div />.\"\n          * https://reactjs.org/docs/integrating-with-other-libraries.html \n          */}\n        <text transform=\"rotate(-90)\" y=\"6\" dy=\"0.71em\" textAnchor=\"end\">\n          Frequency\n        </text>\n      </g>\n      {data.map(d => (\n        <rect\n          key={d.letter}\n          className=\"bar\"\n          x={x(d.letter)}\n          y={y(d.frequency)}\n          width={x.bandwidth()}\n          height={height - y(d.frequency)}\n        />\n      ))}\n    </g>\n  </svg>\n\n) //end export default \n\n\n\n//what will display to the DOM: \n/*const draw = (props) => {\n    d3.select(\"body\").append(\"span\").text(\"Hello, world!\");\n  \n    drawGraph();\n\n} //end const draw*/ \n\n//export default Graphs"]},"metadata":{},"sourceType":"module"}