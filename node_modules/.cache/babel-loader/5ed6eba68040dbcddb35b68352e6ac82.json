{"ast":null,"code":"var _jsxFileName = \"/Users/Banana/Desktop/GITHUB/Front-End/src/components/Spectragraph2.js\";\n//Spectragraph2_old\n\n/* NOTES REGARDING THIS FILE:\nconnection from: https://github.com/leighsteinerlocus/d3-react-tutorial\ndocumentation on React Hooks + useEffect(): https://reactjs.org/docs/hooks-effect.html\n\ncode from: https://medium.com/technical-credit/declarative-d3-examples-in-react-6e736e526182\n\nrun a npm install d3-scale?\nhttps://www.npmjs.com/package/d3-scale\n*/\n// ------------------------------------------------------\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3'; //if you get an error from the line above, try: npm install --save d3\n\nimport { scaleBand, scaleLinear } from 'd3-scale';\nimport { tsvParse } from 'd3-dsv';\nimport { max } from 'd3-array';\nimport { axisBottom, axisLeft } from 'd3-axis';\nimport { select } from 'd3-selection'; //import dataTsv from './data.tsv';\n\nconst dataTsv = [0.000172174, 0.00019782, 0.000172848, 0.000163227, 0.00019036, 0.000207698, 0.000207333, 0.000205626, 0.000219011, 0.000243203, 0.000250086, 0.000244639, 0.000252732, 0.000262975, 0.000276727, 0.000290483, 0.00028693, 0.000297219, 0.000312412, 0.000315359, 0.000337491, 0.000344327, 0.000337119, 0.000363282, 0.000389649, 0.000407566, 0.00041797, 0.000434073, 0.000442378, 0.000444949, 0.000456075, 0.000482237, 0.000503746, 0.000508244, 0.00051079, 0.000523827, 0.00054248, 0.000554715, 0.000583674, 0.000604276, 0.000610428, 0.000646404, 0.000674084, 0.000699585, 0.000741093, 0.000767675, 0.000785589, 0.00080585, 0.000841434, 0.000885663, 0.000933614, 0.000981088, 0.00102862, 0.00107423, 0.00111577, 0.00114923, 0.00119956, 0.00126482, 0.00133148, 0.00138322, 0.00144021, 0.00151, 0.00157309, 0.00162601, 0.00167451, 0.00172948, 0.00180016, 0.00187155, 0.00193338, 0.00198944, 0.00204157, 0.00209568, 0.00215704, 0.00219709, 0.00224178, 0.00230715, 0.00236484, 0.00240902, 0.00245309, 0.00252348, 0.00258008, 0.00263304, 0.00269515, 0.00274847, 0.00280766, 0.00287297, 0.00292793, 0.00298318, 0.00304171, 0.00310261, 0.00315364, 0.00321186, 0.00328218, 0.00334429, 0.00340726, 0.00347082, 0.00353171, 0.00359507, 0.00366292, 0.00373399, 0.00379765, 0.00387051, 0.00395153, 0.00402396, 0.00409127, 0.00415639, 0.00422352, 0.00430151, 0.00437621, 0.00444173, 0.00450698, 0.0045849, 0.00466572, 0.00472928, 0.00480616, 0.0048882, 0.00496589, 0.00504995, 0.00513396, 0.00521344, 0.00528571, 0.0053713, 0.00546538, 0.00555368, 0.00562803, 0.00570766, 0.00580115, 0.00588494, 0.00596953, 0.00605666, 0.0061415, 0.00622863, 0.00631495, 0.00639675, 0.00647968, 0.00656847, 0.00666355, 0.00675598, 0.00684861, 0.00694155, 0.00703297, 0.00712488, 0.00721611, 0.00730705, 0.00741329, 0.00751468, 0.00760288, 0.00769554, 0.00779143, 0.00788892, 0.00798469, 0.00808532, 0.0081877, 0.00828745, 0.00838375, 0.00848458, 0.00859149, 0.00869148, 0.00879345, 0.00889897, 0.00900473, 0.00910574, 0.00921401, 0.00934005, 0.00945291, 0.00955333, 0.00964845, 0.0097525, 0.00986606, 0.00998117, 0.0100808, 0.010181, 0.0102927, 0.0104205, 0.0105271, 0.0106331, 0.0107541, 0.0108701, 0.0109805, 0.0110883, 0.0112009, 0.011319, 0.0114368, 0.0115469, 0.0116648, 0.0117839, 0.0118974, 0.012018, 0.0121366, 0.0122494, 0.0123617, 0.0124877, 0.0126216, 0.0127422, 0.0128585, 0.0129744, 0.013093, 0.0132226, 0.0133515, 0.0134729, 0.0135978, 0.0137267, 0.0138545, 0.013965, 0.0140883, 0.0142214, 0.0143461, 0.0144722, 0.0146023, 0.0147358, 0.0148634, 0.0149892, 0.0151171, 0.0152497, 0.0153771, 0.0155011, 0.0156348, 0.0157648, 0.0158922, 0.0160224, 0.0161573, 0.0162919, 0.0164228, 0.0165606, 0.0166936, 0.0168182, 0.0169478, 0.0170776, 0.0172082, 0.0173449, 0.0174795, 0.0176161, 0.0177598, 0.0178883, 0.0180154, 0.0181518, 0.0182835, 0.0184198, 0.0185615, 0.0186944, 0.0188304, 0.0189688, 0.0191012, 0.0192313, 0.0193592, 0.0194838, 0.0196069, 0.0197348, 0.0198704, 0.0200031, 0.0201449, 0.0202959, 0.0204403, 0.0205872, 0.0207391, 0.0208957, 0.0210491, 0.0211969, 0.0213392, 0.0214825, 0.0216285, 0.0217744, 0.0218991, 0.0220511, 0.0222333, 0.0223782, 0.0225147, 0.0226398, 0.0227358, 0.022829, 0.0229347, 0.0230591, 0.0231736, 0.0232847, 0.023401, 0.0235226, 0.0236386, 0.0237495, 0.023872, 0.0239917, 0.024116, 0.0242632, 0.0244058, 0.0245426, 0.0246787, 0.0248103, 0.0249429, 0.0250797, 0.0252168, 0.0253558, 0.0254955, 0.0256323, 0.0257657, 0.0259011, 0.0260487, 0.0261909, 0.0263284, 0.0264652, 0.0265997, 0.0267299, 0.0268576, 0.0270052, 0.0271427, 0.027262, 0.0273868, 0.0275199, 0.0276553, 0.02778, 0.0279065, 0.0280341, 0.028161, 0.0282878, 0.0284224, 0.0285628, 0.0286752, 0.0287894, 0.0289171, 0.029041, 0.0291739, 0.0293081, 0.0294245, 0.0295452, 0.0296672, 0.0297842, 0.0299098, 0.0300351, 0.0301553, 0.0302839, 0.0304045, 0.0305173, 0.0306503, 0.0307787, 0.0309035, 0.0310371, 0.0311663, 0.0313018, 0.0314547, 0.0315945, 0.0317195, 0.0318353, 0.0319626, 0.0320831, 0.0321946, 0.0323149, 0.0324493, 0.0325868, 0.0327058, 0.032813, 0.032921, 0.0330405, 0.0331728, 0.033301, 0.0334166, 0.0335321, 0.0336525, 0.0337725, 0.0338742, 0.0339848, 0.0341061, 0.0342289, 0.0343481, 0.0344628, 0.0345751, 0.0346835, 0.0347939, 0.0349112, 0.0350421, 0.0351654, 0.0352762, 0.0353832, 0.0354953, 0.0356085, 0.035713, 0.0358186, 0.0359324, 0.0360561, 0.0361776, 0.0362911, 0.0363953, 0.0364909, 0.0366012, 0.0367221, 0.0368322, 0.0369424, 0.0370543, 0.0371636, 0.037262, 0.0373667, 0.0374864, 0.0376034, 0.0377135, 0.0378147, 0.0379086, 0.0380138, 0.0381248, 0.0382288, 0.0383434, 0.0384591, 0.0385651, 0.0386649, 0.0387688, 0.0388774, 0.0389741, 0.0390755, 0.0391806, 0.0392785, 0.039374, 0.0394733, 0.039581, 0.0396789, 0.039777, 0.0398812, 0.0399886, 0.0400859, 0.0401746, 0.0402686, 0.0403624, 0.040457, 0.0405552, 0.040652, 0.0407425, 0.0408276, 0.0409219, 0.0410236, 0.041125, 0.041211, 0.0412943, 0.0413842, 0.0414855, 0.0415709, 0.041658, 0.0417583, 0.0418476, 0.041933, 0.0420186, 0.0421027, 0.0421868, 0.0422697, 0.0423498, 0.0424432, 0.0425377, 0.0426241, 0.0427086, 0.0427884, 0.0428643, 0.0429402, 0.0430219, 0.0431028, 0.0431761, 0.0432639, 0.0433535];\nconst data = dataTsv;\nconst d = data;\nconst svgWidth = 960,\n      svgHeight = 500; //Note: getting width and height from a variable rather than the elements attribute e.g. svg.attr(\"width\")\n\nconst margin = {\n  top: 20,\n  right: 20,\n  bottom: 30,\n  left: 40\n},\n      width = svgWidth - margin.left - margin.right,\n      height = svgHeight - margin.top - margin.bottom;\nconst x = scaleBand().rangeRound([0, width]).padding(0.1),\n      y = scaleLinear().rangeRound([height, 0]);\n/*const data = tsvParse(dataTsv, d => {\n  d.frequency = +d.frequency;\n  return d;\n}); */\n// Scale the range of the data in the domains? \n\n/*x.domain(data.map(d => d.letter));\ny.domain([0, max(data, d => d.frequency)]);*/\n\nfunction adder(n) {\n  if (n < 0.1) {\n    return 0.005;\n  }\n\n  if (n < 1) {\n    return 0.1;\n  } else {\n    return 0;\n  }\n}\n\ny.domain([0, (d3.max(data) + adder(d3.max(data))).toFixed(2)]);\nx.domain([350, 800]); //connects Instrument_Profile and Spectragraph2 files: \n\nconst Graphs = props => {\n  useEffect(() => {\n    //uses React Hook, see above links\n    d3.select('.graphs > *').remove(); //draw(props)\n  });\n  return React.createElement(\"div\", {\n    className: \"graphs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  });\n}; // ------------------------------------------------------\n\n\nfunction drawGraph() {\n  d3.select(\"body\").append(\"span\").text(\"Let's draw the graph!\");\n}\n\nexport default (() => React.createElement(\"svg\", {\n  width: svgWidth,\n  height: svgHeight,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88\n  },\n  __self: this\n}, React.createElement(\"g\", {\n  transform: `translate(${margin.left}, ${margin.top})`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}, React.createElement(\"g\", {\n  className: \"axis axis--x\",\n  transform: `translate(0, ${height})`,\n  ref: node => select(node).call(axisBottom(x)),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n}), React.createElement(\"g\", {\n  className: \"axis axis--y\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}, React.createElement(\"g\", {\n  ref: node => select(node).call(axisLeft(y).ticks(10, '%')),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96\n  },\n  __self: this\n}), React.createElement(\"text\", {\n  transform: \"rotate(-90)\",\n  y: \"6\",\n  dy: \"0.71em\",\n  textAnchor: \"end\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}, \"Frequency\")), data.map(d => React.createElement(\"rect\", {\n  key: d.letter,\n  className: \"bar\",\n  x: x(d.letter),\n  y: y(d.frequency),\n  width: x.bandwidth(),\n  height: height - y(d.frequency),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107\n  },\n  __self: this\n}))))); //end export default \n//what will display to the DOM: \n\n/*const draw = (props) => {\n    d3.select(\"body\").append(\"span\").text(\"Hello, world!\");\n  \n    drawGraph();\n\n} //end const draw*/\n//export default Graphs","map":{"version":3,"sources":["/Users/Banana/Desktop/GITHUB/Front-End/src/components/Spectragraph2.js"],"names":["React","useEffect","d3","scaleBand","scaleLinear","tsvParse","max","axisBottom","axisLeft","select","dataTsv","data","d","svgWidth","svgHeight","margin","top","right","bottom","left","width","height","x","rangeRound","padding","y","adder","n","domain","toFixed","Graphs","props","remove","drawGraph","append","text","node","call","ticks","map","letter","frequency","bandwidth"],"mappings":"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","sourcesContent":["//Spectragraph2_old\n\n/* NOTES REGARDING THIS FILE:\nconnection from: https://github.com/leighsteinerlocus/d3-react-tutorial\ndocumentation on React Hooks + useEffect(): https://reactjs.org/docs/hooks-effect.html\n\ncode from: https://medium.com/technical-credit/declarative-d3-examples-in-react-6e736e526182\n\nrun a npm install d3-scale?\nhttps://www.npmjs.com/package/d3-scale\n*/\n\n// ------------------------------------------------------\n\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3';\n//if you get an error from the line above, try: npm install --save d3\n\nimport { scaleBand, scaleLinear } from 'd3-scale';\nimport { tsvParse } from 'd3-dsv';\nimport { max } from 'd3-array';\nimport { axisBottom, axisLeft } from 'd3-axis';\nimport { select } from 'd3-selection';\n\n\n\n//import dataTsv from './data.tsv';\nconst dataTsv = [0.000172174,0.00019782,0.000172848,0.000163227,0.00019036,0.000207698,0.000207333,0.000205626,0.000219011,0.000243203,0.000250086,0.000244639,0.000252732,0.000262975,0.000276727,0.000290483,0.00028693,0.000297219,0.000312412,0.000315359,0.000337491,0.000344327,0.000337119,0.000363282,0.000389649,0.000407566,0.00041797,0.000434073,0.000442378,0.000444949,0.000456075,0.000482237,0.000503746,0.000508244,0.00051079,0.000523827,0.00054248,0.000554715,0.000583674,0.000604276,0.000610428,0.000646404,0.000674084,0.000699585,0.000741093,0.000767675,0.000785589,0.00080585,0.000841434,0.000885663,0.000933614,0.000981088,0.00102862,0.00107423,0.00111577,0.00114923,0.00119956,0.00126482,0.00133148,0.00138322,0.00144021,0.00151,0.00157309,0.00162601,0.00167451,0.00172948,0.00180016,0.00187155,0.00193338,0.00198944,0.00204157,0.00209568,0.00215704,0.00219709,0.00224178,0.00230715,0.00236484,0.00240902,0.00245309,0.00252348,0.00258008,0.00263304,0.00269515,0.00274847,0.00280766,0.00287297,0.00292793,0.00298318,0.00304171,0.00310261,0.00315364,0.00321186,0.00328218,0.00334429,0.00340726,0.00347082,0.00353171,0.00359507,0.00366292,0.00373399,0.00379765,0.00387051,0.00395153,0.00402396,0.00409127,0.00415639,0.00422352,0.00430151,0.00437621,0.00444173,0.00450698,0.0045849,0.00466572,0.00472928,0.00480616,0.0048882,0.00496589,0.00504995,0.00513396,0.00521344,0.00528571,0.0053713,0.00546538,0.00555368,0.00562803,0.00570766,0.00580115,0.00588494,0.00596953,0.00605666,0.0061415,0.00622863,0.00631495,0.00639675,0.00647968,0.00656847,0.00666355,0.00675598,0.00684861,0.00694155,0.00703297,0.00712488,0.00721611,0.00730705,0.00741329,0.00751468,0.00760288,0.00769554,0.00779143,0.00788892,0.00798469,0.00808532,0.0081877,0.00828745,0.00838375,0.00848458,0.00859149,0.00869148,0.00879345,0.00889897,0.00900473,0.00910574,0.00921401,0.00934005,0.00945291,0.00955333,0.00964845,0.0097525,0.00986606,0.00998117,0.0100808,0.010181,0.0102927,0.0104205,0.0105271,0.0106331,0.0107541,0.0108701,0.0109805,0.0110883,0.0112009,0.011319,0.0114368,0.0115469,0.0116648,0.0117839,0.0118974,0.012018,0.0121366,0.0122494,0.0123617,0.0124877,0.0126216,0.0127422,0.0128585,0.0129744,0.013093,0.0132226,0.0133515,0.0134729,0.0135978,0.0137267,0.0138545,0.013965,0.0140883,0.0142214,0.0143461,0.0144722,0.0146023,0.0147358,0.0148634,0.0149892,0.0151171,0.0152497,0.0153771,0.0155011,0.0156348,0.0157648,0.0158922,0.0160224,0.0161573,0.0162919,0.0164228,0.0165606,0.0166936,0.0168182,0.0169478,0.0170776,0.0172082,0.0173449,0.0174795,0.0176161,0.0177598,0.0178883,0.0180154,0.0181518,0.0182835,0.0184198,0.0185615,0.0186944,0.0188304,0.0189688,0.0191012,0.0192313,0.0193592,0.0194838,0.0196069,0.0197348,0.0198704,0.0200031,0.0201449,0.0202959,0.0204403,0.0205872,0.0207391,0.0208957,0.0210491,0.0211969,0.0213392,0.0214825,0.0216285,0.0217744,0.0218991,0.0220511,0.0222333,0.0223782,0.0225147,0.0226398,0.0227358,0.022829,0.0229347,0.0230591,0.0231736,0.0232847,0.023401,0.0235226,0.0236386,0.0237495,0.023872,0.0239917,0.024116,0.0242632,0.0244058,0.0245426,0.0246787,0.0248103,0.0249429,0.0250797,0.0252168,0.0253558,0.0254955,0.0256323,0.0257657,0.0259011,0.0260487,0.0261909,0.0263284,0.0264652,0.0265997,0.0267299,0.0268576,0.0270052,0.0271427,0.027262,0.0273868,0.0275199,0.0276553,0.02778,0.0279065,0.0280341,0.028161,0.0282878,0.0284224,0.0285628,0.0286752,0.0287894,0.0289171,0.029041,0.0291739,0.0293081,0.0294245,0.0295452,0.0296672,0.0297842,0.0299098,0.0300351,0.0301553,0.0302839,0.0304045,0.0305173,0.0306503,0.0307787,0.0309035,0.0310371,0.0311663,0.0313018,0.0314547,0.0315945,0.0317195,0.0318353,0.0319626,0.0320831,0.0321946,0.0323149,0.0324493,0.0325868,0.0327058,0.032813,0.032921,0.0330405,0.0331728,0.033301,0.0334166,0.0335321,0.0336525,0.0337725,0.0338742,0.0339848,0.0341061,0.0342289,0.0343481,0.0344628,0.0345751,0.0346835,0.0347939,0.0349112,0.0350421,0.0351654,0.0352762,0.0353832,0.0354953,0.0356085,0.035713,0.0358186,0.0359324,0.0360561,0.0361776,0.0362911,0.0363953,0.0364909,0.0366012,0.0367221,0.0368322,0.0369424,0.0370543,0.0371636,0.037262,0.0373667,0.0374864,0.0376034,0.0377135,0.0378147,0.0379086,0.0380138,0.0381248,0.0382288,0.0383434,0.0384591,0.0385651,0.0386649,0.0387688,0.0388774,0.0389741,0.0390755,0.0391806,0.0392785,0.039374,0.0394733,0.039581,0.0396789,0.039777,0.0398812,0.0399886,0.0400859,0.0401746,0.0402686,0.0403624,0.040457,0.0405552,0.040652,0.0407425,0.0408276,0.0409219,0.0410236,0.041125,0.041211,0.0412943,0.0413842,0.0414855,0.0415709,0.041658,0.0417583,0.0418476,0.041933,0.0420186,0.0421027,0.0421868,0.0422697,0.0423498,0.0424432,0.0425377,0.0426241,0.0427086,0.0427884,0.0428643,0.0429402,0.0430219,0.0431028,0.0431761,0.0432639,0.0433535]; \nconst data = dataTsv; \nconst d = data; \n\nconst svgWidth = 960,\n  svgHeight = 500;\n\n//Note: getting width and height from a variable rather than the elements attribute e.g. svg.attr(\"width\")\nconst margin = { top: 20, right: 20, bottom: 30, left: 40 },\n  width = svgWidth - margin.left - margin.right,\n  height = svgHeight - margin.top - margin.bottom;\n\nconst x = scaleBand()\n    .rangeRound([0, width])\n    .padding(0.1),\n  y = scaleLinear().rangeRound([height, 0]);\n\n/*const data = tsvParse(dataTsv, d => {\n  d.frequency = +d.frequency;\n  return d;\n}); */ \n\n// Scale the range of the data in the domains? \n/*x.domain(data.map(d => d.letter));\ny.domain([0, max(data, d => d.frequency)]);*/ \n\nfunction adder(n){\n  if(n<0.1){\n    return 0.005;\n  }\n  if(n<1){\n    return 0.1;\n  }\n  else{\n    return 0;\n  }\n}\n\ny.domain([0, ((d3.max(data)+adder(d3.max(data))).toFixed(2))]); \nx.domain([350,800]); \n\n\n\n//connects Instrument_Profile and Spectragraph2 files: \nconst Graphs = (props) => {\n    useEffect(() => { //uses React Hook, see above links\n     d3.select('.graphs > *').remove();\n     //draw(props)\n   }, )\n    return <div className=\"graphs\" />\n  }\n// ------------------------------------------------------\n\n\nfunction drawGraph() {\n    d3.select(\"body\").append(\"span\").text(\"Let's draw the graph!\");\n\n}\n\nexport default () => (\n  <svg width={svgWidth} height={svgHeight}>\n    <g transform={`translate(${margin.left}, ${margin.top})`}>\n      <g\n        className=\"axis axis--x\"\n        transform={`translate(0, ${height})`}\n        ref={node => select(node).call(axisBottom(x))}\n      />\n      <g className=\"axis axis--y\">\n        <g ref={node => select(node).call(axisLeft(y).ticks(10, '%'))} />\n        {/* Note: In the actual example 'Frequency' is a child of the above 'g' and it doesn't render. \n          * Changing it to a sibiling allows it to render and having the axis as an empty 'g' means that it will also play nicer with react:\n          * \"The easiest way to avoid conflicts is to prevent the React component from updating. You can do this by rendering elements that React has no reason to update, like an empty <div />.\"\n          * https://reactjs.org/docs/integrating-with-other-libraries.html \n          */}\n        <text transform=\"rotate(-90)\" y=\"6\" dy=\"0.71em\" textAnchor=\"end\">\n          Frequency\n        </text>\n      </g>\n      {data.map(d => (\n        <rect\n          key={d.letter}\n          className=\"bar\"\n          x={x(d.letter)}\n          y={y(d.frequency)}\n          width={x.bandwidth()}\n          height={height - y(d.frequency)}\n        />\n      ))}\n    </g>\n  </svg>\n\n) //end export default \n\n\n\n//what will display to the DOM: \n/*const draw = (props) => {\n    d3.select(\"body\").append(\"span\").text(\"Hello, world!\");\n  \n    drawGraph();\n\n} //end const draw*/ \n\n//export default Graphs"]},"metadata":{},"sourceType":"module"}