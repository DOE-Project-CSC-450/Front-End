{"ast":null,"code":"var _jsxFileName = \"/Users/Banana/Desktop/GITHUB/Front-End/src/components/Spectragraph2.js\";\n\n/* NOTES REGARDING THIS FILE:\nconnection from: https://github.com/leighsteinerlocus/d3-react-tutorial\ndocumentation on React Hooks + useEffect(): https://reactjs.org/docs/hooks-effect.html\n\n*/\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3'; //if you get an error from the line above, try: npm install --save d3\n//connects Instrument_Profile and Spectragraph2 files: \n\nconst Graphs = props => {\n  useEffect(() => {\n    //uses React Hook, see above links\n    d3.select('.graphs > *').remove();\n    draw(props);\n  });\n  return React.createElement(\"div\", {\n    className: \"graphs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  });\n};\n\nvar spectraData;\nvar data = [0.000172174, 0.00019782, 0.000172848, 0.000163227, 0.00019036, 0.000207698, 0.000207333, 0.000205626]; // set the dimensions and margins of the graph\n\nvar margin = {\n  top: 50,\n  right: 50,\n  bottom: 50,\n  left: 80\n},\n    //made left bigger to fit the white axis\nwidth = 460 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom; // append the svg object to the body of the page...sets the size of the graph as well!\n\nvar svg = d3.select(\"#spectraData\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); // add the x Axis\n\nvar x = d3.scaleLinear().domain([350, 800]).range([0, width]); // Add X axis title:\n\nsvg.append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"x\", width / 2).attr(\"y\", height + margin.top - 5).text(\"Wavelength (nm)\");\nsvg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x)); // add the y Axis\n\nvar y = d3.scaleLinear().range([height, 0]).domain([0, (d3.max(data) + adder(d3.max(data))).toFixed(2)]);\nsvg.append(\"g\").call(d3.axisLeft(y));\n\nfunction adder(n) {\n  if (n < 0.1) {\n    return 0.005;\n  }\n\n  if (n < 1) {\n    return 0.1;\n  } else {\n    return 0;\n  }\n}\n\nfunction drawGraph() {\n  d3.select(\"body\").append(\"span\").text(\"Let's draw the graph!\");\n}\n\nconst draw = props => {\n  d3.select(\"body\").append(\"span\").text(\"Hello, world!\");\n  drawGraph();\n}; //end const draw\n\n\nexport default Graphs;","map":{"version":3,"sources":["/Users/Banana/Desktop/GITHUB/Front-End/src/components/Spectragraph2.js"],"names":["React","useEffect","d3","Graphs","props","select","remove","draw","spectraData","data","margin","top","right","bottom","left","width","height","svg","append","attr","x","scaleLinear","domain","range","text","call","axisBottom","y","max","adder","toFixed","axisLeft","n","drawGraph"],"mappings":"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","sourcesContent":["/* NOTES REGARDING THIS FILE:\nconnection from: https://github.com/leighsteinerlocus/d3-react-tutorial\ndocumentation on React Hooks + useEffect(): https://reactjs.org/docs/hooks-effect.html\n\n*/\n\n\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3';\n//if you get an error from the line above, try: npm install --save d3\n\n//connects Instrument_Profile and Spectragraph2 files: \nconst Graphs = (props) => {\n    useEffect(() => { //uses React Hook, see above links\n     d3.select('.graphs > *').remove();\n     draw(props)\n   }, )\n    return <div className=\"graphs\" />\n  }\n  \nvar spectraData; \nvar data  = [0.000172174,0.00019782,0.000172848,0.000163227,0.00019036,0.000207698,0.000207333,0.000205626]; \n\n// set the dimensions and margins of the graph\nvar margin = {top: 50, right: 50, bottom: 50, left: 80},//made left bigger to fit the white axis\n    width = 460 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n\n// append the svg object to the body of the page...sets the size of the graph as well!\nvar svg = d3.select(\"#spectraData\")\n  .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  // add the x Axis\n  var x = d3.scaleLinear()\n            .domain([350,800])\n            .range([0, width]);\n\n   // Add X axis title:\nsvg.append(\"text\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"x\", width/2)\n    .attr(\"y\", height + margin.top-5)\n    .text(\"Wavelength (nm)\");\n  svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  // add the y Axis\n  var y = d3.scaleLinear()\n            .range([height, 0])\n            .domain([0, ((d3.max(data)+adder(d3.max(data))).toFixed(2))])\n  svg.append(\"g\")\n      .call(d3.axisLeft(y));\n\n      function adder(n){\n        if(n<0.1){\n          return 0.005;\n        }\n        if(n<1){\n          return 0.1;\n        }\n        else{\n          return 0;\n        }\n      }\n\nfunction drawGraph() {\n    d3.select(\"body\").append(\"span\").text(\"Let's draw the graph!\");\n}\n\n\nconst draw = (props) => {\n    d3.select(\"body\").append(\"span\").text(\"Hello, world!\");\n    \n\n    drawGraph();\n\n} //end const draw\n\n  export default Graphs"]},"metadata":{},"sourceType":"module"}