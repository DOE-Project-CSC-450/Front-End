{"ast":null,"code":"import _classCallCheck from\"/Users/Banana/Desktop/GITHUB/Front-End/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Banana/Desktop/GITHUB/Front-End/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/Banana/Desktop/GITHUB/Front-End/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/Banana/Desktop/GITHUB/Front-End/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/Banana/Desktop/GITHUB/Front-End/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/Banana/Desktop/GITHUB/Front-End/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import{Component}from\"react\";import{AppRegistry,View,TextInput}from\"react\";import{Button,Segment,Divider,Search,Grid,Header,Dropdown,Form,TextArea,FormButton}from\"semantic-ui-react\";var currentDate=new Date().toLocaleTimeString();//maybe will use getDate() instead use setInterval() keep updating something\nvar Uploadpage=/*#__PURE__*/function(_Component){_inherits(Uploadpage,_Component);function Uploadpage(props){var _this;_classCallCheck(this,Uploadpage);_this=_possibleConstructorReturn(this,_getPrototypeOf(Uploadpage).call(this,props));//you make your states here\n_this.state={manufacturer:\"\",catalogNumber:\"\",description:\"\",docCreat:\"\",uniqueIdent:\"\",measureEquip:\"\",labratory:\"\",reportNum:\"\",reportData:\"\",reflectionGeom:\"\",transGeom:\"\",bandfwhm:\"\",bandConn:\"\"};//bind manufactuer\n_this.handle_change=_this.handle_change.bind(_assertThisInitialized(_this));//bind catalog number\n_this.cnHandle_change=_this.cnHandle_change.bind(_assertThisInitialized(_this));//bind decription\n_this.descriptionHandle_change=_this.descriptionHandle_change.bind(_assertThisInitialized(_this));//bind document creator\n_this.docCreatHandle_change=_this.docCreatHandle_change.bind(_assertThisInitialized(_this));//bind unique identifier\n_this.uniqueIdentHandle_change=_this.uniqueIdentHandle_change.bind(_assertThisInitialized(_this));//bind measurement equipment\n_this.measureEquipHandle_change=_this.measureEquipHandle_change.bind(_assertThisInitialized(_this));//bind labratory\n_this.labratoryHandle_change=_this.labratoryHandle_change.bind(_assertThisInitialized(_this));//bind report num\n_this.reportNumHandle_change=_this.reportNumHandle_change.bind(_assertThisInitialized(_this));//bind report data\n_this.reportDataHandle_change=_this.reportDataHandle_change.bind(_assertThisInitialized(_this));//bind reflection geometry\n_this.reflectionGeomHandle_change=_this.reflectionGeomHandle_change.bind(_assertThisInitialized(_this));//bind transmission geometry\n_this.transGeomHandle_change=_this.transGeomHandle_change.bind(_assertThisInitialized(_this));//bind bandwidth fwhm\n_this.bandfwhmHandle_change=_this.bandfwhmHandle_change.bind(_assertThisInitialized(_this));//bind bandwidth connected\n_this.bandConnHandle_change=_this.bandConnHandle_change.bind(_assertThisInitialized(_this));//for the submission value\n_this.handle_submit=_this.handle_submit.bind(_assertThisInitialized(_this));return _this;}//these are your functions\n//for manufacturer\n_createClass(Uploadpage,[{key:\"handle_change\",value:function handle_change(event){this.setState({manufacturer:event.target.value});}//for catalog number\n},{key:\"cnHandle_change\",value:function cnHandle_change(event){this.setState({catalogNumber:event.target.value});}//for description\n},{key:\"descriptionHandle_change\",value:function descriptionHandle_change(event){this.setState({description:event.target.value});console.log(this.state.description);}//for document creator\n},{key:\"docCreatHandle_change\",value:function docCreatHandle_change(event){this.setState({docCreat:event.target.value});console.log(this.state.docCreat);}//for unique identifier\n},{key:\"uniqueIdentHandle_change\",value:function uniqueIdentHandle_change(event){this.setState({uniqueIdent:event.target.value});console.log(this.state.uniqueIdent);}//for Measurement equipment:\n},{key:\"measureEquipHandle_change\",value:function measureEquipHandle_change(event){this.setState({measureEquip:event.target.value});console.log(this.state.measureEquip);}//for Laboratory:\n},{key:\"labratoryHandle_change\",value:function labratoryHandle_change(event){this.setState({labratory:event.target.value});console.log(this.state.labratory);}//for Report #\n},{key:\"reportNumHandle_change\",value:function reportNumHandle_change(event){this.setState({reportNum:event.target.value});console.log(this.state.reportNum);}//for report data\n},{key:\"reportDataHandle_change\",value:function reportDataHandle_change(event){this.setState({reportData:event.target.value});console.log(this.state.reportData);}//for reflection geometry\n},{key:\"reflectionGeomHandle_change\",value:function reflectionGeomHandle_change(event){this.setState({reflectionGeom:event.target.value});console.log(this.state.reflectionGeom);}//for transmission geometry\n},{key:\"transGeomHandle_change\",value:function transGeomHandle_change(event){this.setState({transGeom:event.target.value});console.log(this.state.transGeom);}//for bandwidth fwhm\n},{key:\"bandfwhmHandle_change\",value:function bandfwhmHandle_change(event){this.setState({bandfwhm:event.target.value});console.log(this.state.bandfwhm);}//for bandwith corrected\n},{key:\"bandConnHandle_change\",value:function bandConnHandle_change(event){this.setState({bandConn:event.target.value});console.log(this.state.bandConn);}//for the submission button\n},{key:\"handle_submit\",value:function handle_submit(event){alert(\"You submitted the form \"+this.state.manufacturer);event.preventDefault();}},{key:\"render\",value:function render(){return React.createElement(\"div\",{id:\"form\"},React.createElement(\"div\",{id:\"h1Form\"},React.createElement(Header,{as:\"h1\"},\"Upload Form\")),React.createElement(Form,null,React.createElement(\"div\",{class:\"formElementDecor\"},React.createElement(Form.Input,{label:\"Manufacturer:\",type:\"text\",onChange:this.handle_change}),React.createElement(\"br\",null),React.createElement(Form.Input,{label:\"Catalog Number:\",type:\"number\",onChange:this.cnHandle_change}),React.createElement(\"label\",null,\"Description\"),React.createElement(TextArea,{label:\"Description\",placeholder:\"Tell us more\",maxLength:\"255\",onChange:this.descriptionHandle_change}),React.createElement(Form.Input,{label:\"Document Creator\",type:\"text\",onChange:this.docCreatHandle_change}),React.createElement(Form.Input,{label:\"Unique identifier:\",type:\"text\",onChange:this.uniqueIdentHandle_change}),React.createElement(Form.Input,{label:\"Measurement equipment::\",type:\"text\",onChange:this.measureEquipHandle_change}),React.createElement(Form.Input,{label:\"Laboratory:\",type:\"text\",onChange:this.labratoryHandle_change}),React.createElement(Form.Input,{label:\"Report #:\",type:\"text\",onChange:this.reportNumHandle_change}),React.createElement(Form.Input,{label:\"Report data:\",type:\"text\",onChange:this.reportDataHandle_change}),React.createElement(Form.Input,{label:\"Reflection geometry:\",type:\"text\",onChange:this.reflectionGeomHandle_change}),React.createElement(Form.Input,{label:\"Transmission geometry:\",type:\"text\",onChange:this.transGeomHandle_change}),React.createElement(Form.Input,{label:\"bandwidth fwhm:\",type:\"text\",onChange:this.bandfwhmHandle_change}),React.createElement(\"label\",null,\"Is the Bandwidth corrected\"),React.createElement(\"select\",{class:\"ui dropdown\",onChange:this.bandConnHandle_change},React.createElement(\"option\",{value:\"\"},\"Select\"),React.createElement(\"option\",{value:\"Yes\"},\"Yes\"),React.createElement(\"option\",{value:\"No\"},\"No\")))),React.createElement(\"br\",null),React.createElement(\"div\",{id:\"uploadForm\"},React.createElement(Button,null,\"Upload\")),React.createElement(Button,{onClick:this.handle_submit},\"Submit\"));}}]);return Uploadpage;}(Component);export{Uploadpage as default};","map":{"version":3,"sources":["/Users/Banana/Desktop/GITHUB/Front-End/src/components/uploadpage.jsx"],"names":["React","Component","AppRegistry","View","TextInput","Button","Segment","Divider","Search","Grid","Header","Dropdown","Form","TextArea","FormButton","currentDate","Date","toLocaleTimeString","Uploadpage","props","state","manufacturer","catalogNumber","description","docCreat","uniqueIdent","measureEquip","labratory","reportNum","reportData","reflectionGeom","transGeom","bandfwhm","bandConn","handle_change","bind","cnHandle_change","descriptionHandle_change","docCreatHandle_change","uniqueIdentHandle_change","measureEquipHandle_change","labratoryHandle_change","reportNumHandle_change","reportDataHandle_change","reflectionGeomHandle_change","transGeomHandle_change","bandfwhmHandle_change","bandConnHandle_change","handle_submit","event","setState","target","value","console","log","alert","preventDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Component } from \"react\";\nimport { AppRegistry, View, TextInput } from \"react\";\nimport {Button, Segment, Divider, Search, Grid, Header, Dropdown, Form, TextArea, FormButton} from \"semantic-ui-react\";\n\nvar currentDate = new Date().toLocaleTimeString(); //maybe will use getDate() instead use setInterval() keep updating something\n\nexport default class Uploadpage extends Component {\n  constructor(props) {\n    super(props);\n    //you make your states here\n    this.state = {\n      manufacturer: \"\",\n      catalogNumber: \"\",\n      description: \"\",\n      docCreat: \"\",\n      uniqueIdent: \"\",\n      measureEquip: \"\",\n      labratory: \"\",\n      reportNum: \"\",\n      reportData: \"\",\n      reflectionGeom: \"\",\n      transGeom: \"\",\n      bandfwhm: \"\",\n      bandConn: \"\"\n    };\n\n    //bind manufactuer\n    this.handle_change = this.handle_change.bind(this);\n    //bind catalog number\n    this.cnHandle_change = this.cnHandle_change.bind(this);\n    //bind decription\n    this.descriptionHandle_change = this.descriptionHandle_change.bind(this);\n    //bind document creator\n    this.docCreatHandle_change = this.docCreatHandle_change.bind(this);\n    //bind unique identifier\n    this.uniqueIdentHandle_change = this.uniqueIdentHandle_change.bind(this);\n    //bind measurement equipment\n    this.measureEquipHandle_change = this.measureEquipHandle_change.bind(this);\n    //bind labratory\n    this.labratoryHandle_change = this.labratoryHandle_change.bind(this);\n    //bind report num\n    this.reportNumHandle_change = this.reportNumHandle_change.bind(this);\n    //bind report data\n    this.reportDataHandle_change = this.reportDataHandle_change.bind(this);\n    //bind reflection geometry\n    this.reflectionGeomHandle_change = this.reflectionGeomHandle_change.bind(\n      this\n    );\n    //bind transmission geometry\n    this.transGeomHandle_change = this.transGeomHandle_change.bind(this);\n    //bind bandwidth fwhm\n    this.bandfwhmHandle_change = this.bandfwhmHandle_change.bind(this);\n    //bind bandwidth connected\n    this.bandConnHandle_change = this.bandConnHandle_change.bind(this);\n\n    //for the submission value\n    this.handle_submit = this.handle_submit.bind(this);\n  }\n\n  //these are your functions\n\n  //for manufacturer\n  handle_change(event) {\n    this.setState({ manufacturer: event.target.value });\n  }\n  //for catalog number\n  cnHandle_change(event) {\n    this.setState({ catalogNumber: event.target.value });\n  }\n\n  //for description\n  descriptionHandle_change(event) {\n    this.setState({ description: event.target.value });\n    console.log(this.state.description);\n  }\n\n  //for document creator\n  docCreatHandle_change(event) {\n    this.setState({ docCreat: event.target.value });\n    console.log(this.state.docCreat);\n  }\n\n  //for unique identifier\n  uniqueIdentHandle_change(event) {\n    this.setState({ uniqueIdent: event.target.value });\n    console.log(this.state.uniqueIdent);\n  }\n\n  //for Measurement equipment:\n  measureEquipHandle_change(event) {\n    this.setState({ measureEquip: event.target.value });\n    console.log(this.state.measureEquip);\n  }\n\n  //for Laboratory:\n  labratoryHandle_change(event) {\n    this.setState({ labratory: event.target.value });\n    console.log(this.state.labratory);\n  }\n\n  //for Report #\n  reportNumHandle_change(event) {\n    this.setState({ reportNum: event.target.value });\n    console.log(this.state.reportNum);\n  }\n\n  //for report data\n  reportDataHandle_change(event) {\n    this.setState({ reportData: event.target.value });\n    console.log(this.state.reportData);\n  }\n\n  //for reflection geometry\n  reflectionGeomHandle_change(event) {\n    this.setState({ reflectionGeom: event.target.value });\n    console.log(this.state.reflectionGeom);\n  }\n\n  //for transmission geometry\n  transGeomHandle_change(event) {\n    this.setState({ transGeom: event.target.value });\n    console.log(this.state.transGeom);\n  }\n\n  //for bandwidth fwhm\n  bandfwhmHandle_change(event) {\n    this.setState({ bandfwhm: event.target.value });\n    console.log(this.state.bandfwhm);\n  }\n\n  //for bandwith corrected\n  bandConnHandle_change(event) {\n    this.setState({ bandConn: event.target.value });\n    console.log(this.state.bandConn);\n  }\n\n  //for the submission button\n  handle_submit(event) {\n    alert(\"You submitted the form \" + this.state.manufacturer);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div id=\"form\">\n        <div id=\"h1Form\">\n          <Header as=\"h1\">Upload Form</Header>\n        </div>\n\n        <Form>\n          <div class=\"formElementDecor\">\n          <Form.Input\n            label=\"Manufacturer:\"\n            type=\"text\"\n            onChange={this.handle_change}\n          />\n          <br></br>\n          <Form.Input\n            label=\"Catalog Number:\"\n            type=\"number\"\n            onChange={this.cnHandle_change}\n          />\n          {/* <Form.Input label='Description:' type='text' maxLength =\"255\" rows=\"4\" onChange={this.descriptionHandle_change} /> */}\n          <label>Description</label>\n          <TextArea\n            label=\"Description\"\n            placeholder=\"Tell us more\"\n            maxLength=\"255\"\n            onChange={this.descriptionHandle_change}\n          />\n          <Form.Input\n            label=\"Document Creator\"\n            type=\"text\"\n            onChange={this.docCreatHandle_change}\n          />\n          <Form.Input\n            label=\"Unique identifier:\"\n            type=\"text\"\n            onChange={this.uniqueIdentHandle_change}\n          />\n          <Form.Input\n            label=\"Measurement equipment::\"\n            type=\"text\"\n            onChange={this.measureEquipHandle_change}\n          />\n          <Form.Input\n            label=\"Laboratory:\"\n            type=\"text\"\n            onChange={this.labratoryHandle_change}\n          />\n          <Form.Input\n            label=\"Report #:\"\n            type=\"text\"\n            onChange={this.reportNumHandle_change}\n          />\n          <Form.Input\n            label=\"Report data:\"\n            type=\"text\"\n            onChange={this.reportDataHandle_change}\n          />\n          <Form.Input\n            label=\"Reflection geometry:\"\n            type=\"text\"\n            onChange={this.reflectionGeomHandle_change}\n          />\n          <Form.Input\n            label=\"Transmission geometry:\"\n            type=\"text\"\n            onChange={this.transGeomHandle_change}\n          />\n          <Form.Input\n            label=\"bandwidth fwhm:\"\n            type=\"text\"\n            onChange={this.bandfwhmHandle_change}\n          />\n          <label>Is the Bandwidth corrected</label>\n          <select class=\"ui dropdown\" onChange={this.bandConnHandle_change}>\n            <option value=\"\">Select</option>\n            <option value=\"Yes\">Yes</option>\n            <option value=\"No\">No</option>\n          </select>\n          </div>\n        </Form>\n\n        <br />\n        <div id=\"uploadForm\">\n          <Button>Upload</Button>\n        </div>\n\n        <Button onClick={this.handle_submit}>Submit</Button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}