{"ast":null,"code":"var _jsxFileName = \"/Users/Banana/Desktop/GITHUB/Front-End/src/components/Spectragraph2.js\";\n\n/* NOTES REGARDING THIS FILE:\nconnection from: https://github.com/leighsteinerlocus/d3-react-tutorial\ndocumentation on React Hooks + useEffect(): https://reactjs.org/docs/hooks-effect.html\n\nrun a npm install d3-scale?\nhttps://www.npmjs.com/package/d3-scale\n*/\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3'; //if you get an error from the line above, try: npm install --save d3\n\nimport { scaleBand, scaleLinear } from 'd3-scale';\nimport { tsvParse } from 'd3-dsv';\nimport { max } from 'd3-array';\nimport { axisBottom, axisLeft } from 'd3-axis';\nimport { select } from 'd3-selection';\nconst dataTsv = [1, 2, 3, 4, 5, 6];\nimport './chart.css'; //connects Instrument_Profile and Spectragraph2 files: \n\nconst Graphs = props => {\n  useEffect(() => {\n    //uses React Hook, see above links\n    d3.select('.graphs > *').remove();\n    draw(props);\n  });\n  return React.createElement(\"div\", {\n    className: \"graphs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  });\n}; // ------------------------------------------------------\n\n\nfunction drawGraph() {\n  d3.select(\"body\").append(\"span\").text(\"Let's draw the graph!\");\n  React.createElement(\"svg\", {\n    width: svgWidth,\n    height: svgHeight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    transform: `translate(${margin.left}, ${margin.top})`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"axis axis--x\",\n    transform: `translate(0, ${height})`,\n    ref: node => select(node).call(axisBottom(x)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"g\", {\n    className: \"axis axis--y\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    ref: node => select(node).call(axisLeft(y).ticks(10, '%')),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"text\", {\n    transform: \"rotate(-90)\",\n    y: \"6\",\n    dy: \"0.71em\",\n    textAnchor: \"end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Frequency\")), data.map(d => React.createElement(\"rect\", {\n    key: d.letter,\n    className: \"bar\",\n    x: x(d.letter),\n    y: y(d.frequency),\n    width: x.bandwidth(),\n    height: height - y(d.frequency),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))));\n} //what will display to the DOM: \n\n\nconst draw = props => {\n  d3.select(\"body\").append(\"span\").text(\"Hello, world!\");\n  drawGraph();\n}; //end const draw\n\n\nexport default Graphs;","map":{"version":3,"sources":["/Users/Banana/Desktop/GITHUB/Front-End/src/components/Spectragraph2.js"],"names":["React","useEffect","d3","scaleBand","scaleLinear","tsvParse","max","axisBottom","axisLeft","select","dataTsv","Graphs","props","remove","draw","drawGraph","append","text","svgWidth","svgHeight","margin","left","top","height","node","call","x","y","ticks","data","map","d","letter","frequency","bandwidth"],"mappings":"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","sourcesContent":["/* NOTES REGARDING THIS FILE:\nconnection from: https://github.com/leighsteinerlocus/d3-react-tutorial\ndocumentation on React Hooks + useEffect(): https://reactjs.org/docs/hooks-effect.html\n\nrun a npm install d3-scale?\nhttps://www.npmjs.com/package/d3-scale\n*/\n\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3';\n//if you get an error from the line above, try: npm install --save d3\n\nimport { scaleBand, scaleLinear } from 'd3-scale';\nimport { tsvParse } from 'd3-dsv';\nimport { max } from 'd3-array';\nimport { axisBottom, axisLeft } from 'd3-axis';\nimport { select } from 'd3-selection';\n\n\nconst dataTsv = [1,2,3,4,5,6]; \n\nimport './chart.css';\n\n\n//connects Instrument_Profile and Spectragraph2 files: \nconst Graphs = (props) => {\n    useEffect(() => { //uses React Hook, see above links\n     d3.select('.graphs > *').remove();\n     draw(props)\n   }, )\n    return <div className=\"graphs\" />\n  }\n// ------------------------------------------------------\n\n  \n\nfunction drawGraph() {\n    d3.select(\"body\").append(\"span\").text(\"Let's draw the graph!\");\n\n    <svg width={svgWidth} height={svgHeight}>\n    <g transform={`translate(${margin.left}, ${margin.top})`}>\n      <g\n        className=\"axis axis--x\"\n        transform={`translate(0, ${height})`}\n        ref={node => select(node).call(axisBottom(x))}\n      />\n      <g className=\"axis axis--y\">\n        <g ref={node => select(node).call(axisLeft(y).ticks(10, '%'))} />\n        {/* Note: In the actual example 'Frequency' is a child of the above 'g' and it doesn't render. \n          * Changing it to a sibiling allows it to render and having the axis as an empty 'g' means that it will also play nicer with react:\n          * \"The easiest way to avoid conflicts is to prevent the React component from updating. You can do this by rendering elements that React has no reason to update, like an empty <div />.\"\n          * https://reactjs.org/docs/integrating-with-other-libraries.html \n          */}\n        <text transform=\"rotate(-90)\" y=\"6\" dy=\"0.71em\" textAnchor=\"end\">\n          Frequency\n        </text>\n      </g>\n      {data.map(d => (\n        <rect\n          key={d.letter}\n          className=\"bar\"\n          x={x(d.letter)}\n          y={y(d.frequency)}\n          width={x.bandwidth()}\n          height={height - y(d.frequency)}\n        />\n      ))}\n    </g>\n  </svg>\n}\n\n\n\n//what will display to the DOM: \nconst draw = (props) => {\n    d3.select(\"body\").append(\"span\").text(\"Hello, world!\");\n    \n\n    drawGraph();\n\n} //end const draw\n\nexport default Graphs"]},"metadata":{},"sourceType":"module"}