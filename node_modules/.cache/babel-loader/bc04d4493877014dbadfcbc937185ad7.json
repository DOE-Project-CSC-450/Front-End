{"ast":null,"code":"var _jsxFileName = \"/Users/Banana/Desktop/GITHUB/Front-End/src/components/Login.jsx\";\n//import all needed modules and components from React.\nimport React from 'react';\nimport { Component } from 'react';\nimport { Button, Header, Form, Checkbox, Divider, Segment, Grid } from 'semantic-ui-react';\n/* the login/signup page. **/\n//Options for gender selection (Form.select))\n\nconst genderOptions = [{\n  key: 'd',\n  text: 'Select your gender',\n  value: 'default'\n}, {\n  key: 'm',\n  text: 'Male',\n  value: 'Male'\n}, {\n  key: 'f',\n  text: 'Female',\n  value: 'Female'\n}, {\n  key: 'o',\n  text: 'Other',\n  value: 'Other'\n}]; //actual Login class export. (imported in app.jsx)\n\nexport default class Login extends Component {\n  render() {\n    return React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '130vh'\n      },\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 800\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h1\",\n      color: \"black\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"SpectraSearch\"), React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Form, {\n      size: \"huge\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Log In\"), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h4\",\n      color: \"teal\",\n      textAlign: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Username / E-mail\"), React.createElement(\"input\", {\n      fluid: true,\n      placeholder: \"Username / E-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h4\",\n      color: \"teal\",\n      textAlign: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      fluid: true,\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      label: \"Keep me logged in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Form.Button, {\n      size: \"large\",\n      primary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Log In\"), React.createElement(Form.Button, {\n      size: \"large\",\n      secondary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Cancel\")), React.createElement(Divider, {\n      horizontal: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Not having an account?\"), React.createElement(Button, {\n      type: \"Signup\",\n      size: \"large\",\n      primary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Sign up\")), React.createElement(Divider, {\n      section: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Form, {\n      size: \"huge\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h4\",\n      color: \"teal\",\n      textAlign: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      placeholder: \"Username (8-10 characters)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h4\",\n      color: \"teal\",\n      textAlign: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"E-mail\"), React.createElement(\"input\", {\n      fluid: true,\n      label: \"E-mail address\",\n      placeholder: \"Enter your E-mail address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h4\",\n      color: \"teal\",\n      textAlign: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Re-enter E-mail\"), React.createElement(\"input\", {\n      fluid: true,\n      label: \"re-enter E-mail address\",\n      placeholder: \"Re-enter your E-mail address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(Header, {\n      as: \"h4\",\n      color: \"teal\",\n      textAlign: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \" Your Name \"), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"First Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"Middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"Last Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(Header, {\n      as: \"h4\",\n      color: \"teal\",\n      textAlign: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" Birthdate \"), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"Month (MM)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"Day (DD)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"Year (YYYY)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(Header, {\n      as: \"h4\",\n      color: \"teal\",\n      textAlign: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \" Gender \"), React.createElement(Form.Select, {\n      options: genderOptions,\n      placeholder: \"Gender\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Form.Checkbox, {\n      label: \"I hereby agree to all conditions and terms.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Form.Button, {\n      size: \"large\",\n      primary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(Form.Button, {\n      size: \"large\",\n      secondary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Cancel\")))))); //return() ends.   \n  } //render() ends.\n\n\n} //class ends.","map":{"version":3,"sources":["/Users/Banana/Desktop/GITHUB/Front-End/src/components/Login.jsx"],"names":["React","Component","Button","Header","Form","Checkbox","Divider","Segment","Grid","genderOptions","key","text","value","Login","render","height","maxWidth"],"mappings":"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","sourcesContent":["//import all needed modules and components from React.\nimport React from 'react';\nimport { Component } from 'react';\nimport { Button, Header, Form, Checkbox, Divider, Segment, Grid} from 'semantic-ui-react';\n\n/* the login/signup page. **/\n\n//Options for gender selection (Form.select))\nconst genderOptions = [\n    {key: 'd', text: 'Select your gender', value: 'default'}, \n    {key: 'm', text: 'Male', value: 'Male'},\n    {key: 'f', text: 'Female', value: 'Female'},\n    {key: 'o', text: 'Other', value: 'Other'},  \n]\n\n//actual Login class export. (imported in app.jsx)\nexport default class Login extends Component {  \n    render(){\n        return(\n            <Grid textAlign = 'center' style = {{height: '130vh'}} verticalAlign = 'middle'>\n                <Grid.Column style = {{maxWidth: 800}}>\n                    <Header as = 'h1' color = 'black' textAlign = 'center'>SpectraSearch</Header>    \n                        <Segment stacked>\n                            <Form size = 'huge'>\n                                <Header as = 'h2' color = 'teal' textAlign = 'left'>Log In</Header> \n                                <Form.Field>\n                                    <Header as = 'h4' color = 'teal' textAlign = 'left'>Username / E-mail</Header> \n                                    <input fluid placeholder='Username / E-mail' />\n                                </Form.Field>\n                                <Form.Field>\n                                    <Header as = 'h4' color = 'teal' textAlign = 'left'>Password</Header>\n                                    <input fluid placeholder='Password' />\n                                </Form.Field>\n                                <Form.Field>\n                                    <Checkbox label = 'Keep me logged in' />\n                                </Form.Field>\n\n                                <Form.Group widths = 'equal'>\n                                    <Form.Button size = 'large' primary>Log In</Form.Button>\n                                    <Form.Button size = 'large' secondary>Cancel</Form.Button>\n                                </Form.Group>\n\n                                <Divider horizontal>Not having an account?</Divider>\n                                <Button type = 'Signup' size = 'large' primary >Sign up</Button>\n                            </Form>\n                        \n                            <Divider section/>\n                            \n                            <Form size = 'huge'>\n                                <Header as = 'h2' color = 'teal' textAlign = 'left'>Sign Up</Header>\n                                <Form.Field>\n                                    <Header as = 'h4' color = 'teal' textAlign = 'left'>Username</Header>\n                                    <input placeholder = 'Username (8-10 characters)' />\n                                </Form.Field>\n                                <Form.Field>\n                                    <Header as = 'h4' color = 'teal' textAlign = 'left'>E-mail</Header>\n                                    <input fluid label = 'E-mail address' placeholder = 'Enter your E-mail address' />\n                                </Form.Field>\n                                <Form.Field>\n                                    <Header as = 'h4' color = 'teal' textAlign = 'left'>Re-enter E-mail</Header>\n                                    <input fluid label = 're-enter E-mail address' placeholder = 'Re-enter your E-mail address' />\n                                </Form.Field>\n                                <Header as = 'h4' color = 'teal' textAlign = 'left'> Your Name </Header>\n                                <Form.Group widths = 'equal'>\n                                    <Form.Input fluid placeholder = \"First Name\" />\n                                    <Form.Input fluid placeholder = \"Middle\" />\n                                    <Form.Input fluid placeholder = \"Last Name\" />\n                                </Form.Group>\n\n                                <Header as = 'h4' color = 'teal' textAlign = 'left'> Birthdate </Header>\n\n                                <Form.Group widths = 'equal'>\n                                    <Form.Input fluid placeholder = 'Month (MM)' />\n                                    <Form.Input fluid placeholder = 'Day (DD)' />\n                                    <Form.Input fluid placeholder = 'Year (YYYY)' />\n                                </Form.Group>\n                                \n                                <Header as = 'h4' color = 'teal' textAlign = 'left'> Gender </Header>\n                                <Form.Select options = {genderOptions} placeholder = 'Gender' />\n                                <Form.Checkbox label = 'I hereby agree to all conditions and terms.' />\n                                \n                                <Form.Group widths = 'equal'>\n                                    <Form.Button size = 'large' primary>Sign Up</Form.Button>\n                                    <Form.Button size = 'large' secondary>Cancel</Form.Button>\n                                </Form.Group>\n\n                            </Form>\n                    </Segment>\n                </Grid.Column>\n            </Grid>\n        )//return() ends.   \n    }//render() ends.\n}//class ends.\n"]},"metadata":{},"sourceType":"module"}