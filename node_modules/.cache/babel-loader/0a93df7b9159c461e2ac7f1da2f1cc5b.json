{"ast":null,"code":"/*\nRainbowVis-JS \nReleased under Eclipse Public License - v 1.0\n*/\nfunction Rainbow() {\n  \"use strict\";\n\n  var gradients = null;\n  var minNum = 0;\n  var maxNum = 100;\n  var colours = ['ff0000', 'ffff00', '00ff00', '0000ff'];\n  setColours(colours);\n\n  function setColours(spectrum) {\n    if (spectrum.length < 2) {\n      throw new Error('Rainbow must have two or more colours.');\n    } else {\n      var increment = (maxNum - minNum) / (spectrum.length - 1);\n      var firstGradient = new ColourGradient();\n      firstGradient.setGradient(spectrum[0], spectrum[1]);\n      firstGradient.setNumberRange(minNum, minNum + increment);\n      gradients = [firstGradient];\n\n      for (var i = 1; i < spectrum.length - 1; i++) {\n        var colourGradient = new ColourGradient();\n        colourGradient.setGradient(spectrum[i], spectrum[i + 1]);\n        colourGradient.setNumberRange(minNum + increment * i, minNum + increment * (i + 1));\n        gradients[i] = colourGradient;\n      }\n\n      colours = spectrum;\n    }\n  }\n\n  this.setSpectrum = function () {\n    setColours(arguments);\n    return this;\n  };\n\n  this.setSpectrumByArray = function (array) {\n    setColours(array);\n    return this;\n  };\n\n  this.colourAt = function (number) {\n    if (isNaN(number)) {\n      throw new TypeError(number + ' is not a number');\n    } else if (gradients.length === 1) {\n      return gradients[0].colourAt(number);\n    } else {\n      var segment = (maxNum - minNum) / gradients.length;\n      var index = Math.min(Math.floor((Math.max(number, minNum) - minNum) / segment), gradients.length - 1);\n      return gradients[index].colourAt(number);\n    }\n  };\n\n  this.colorAt = this.colourAt;\n\n  this.setNumberRange = function (minNumber, maxNumber) {\n    if (maxNumber > minNumber) {\n      minNum = minNumber;\n      maxNum = maxNumber;\n      setColours(colours);\n    } else {\n      throw new RangeError('maxNumber (' + maxNumber + ') is not greater than minNumber (' + minNumber + ')');\n    }\n\n    return this;\n  };\n}\n\nfunction ColourGradient() {\n  \"use strict\";\n\n  var startColour = 'ff0000';\n  var endColour = '0000ff';\n  var minNum = 0;\n  var maxNum = 100;\n\n  this.setGradient = function (colourStart, colourEnd) {\n    startColour = getHexColour(colourStart);\n    endColour = getHexColour(colourEnd);\n  };\n\n  this.setNumberRange = function (minNumber, maxNumber) {\n    if (maxNumber > minNumber) {\n      minNum = minNumber;\n      maxNum = maxNumber;\n    } else {\n      throw new RangeError('maxNumber (' + maxNumber + ') is not greater than minNumber (' + minNumber + ')');\n    }\n  };\n\n  this.colourAt = function (number) {\n    return calcHex(number, startColour.substring(0, 2), endColour.substring(0, 2)) + calcHex(number, startColour.substring(2, 4), endColour.substring(2, 4)) + calcHex(number, startColour.substring(4, 6), endColour.substring(4, 6));\n  };\n\n  function calcHex(number, channelStart_Base16, channelEnd_Base16) {\n    var num = number;\n\n    if (num < minNum) {\n      num = minNum;\n    }\n\n    if (num > maxNum) {\n      num = maxNum;\n    }\n\n    var numRange = maxNum - minNum;\n    var cStart_Base10 = parseInt(channelStart_Base16, 16);\n    var cEnd_Base10 = parseInt(channelEnd_Base16, 16);\n    var cPerUnit = (cEnd_Base10 - cStart_Base10) / numRange;\n    var c_Base10 = Math.round(cPerUnit * (num - minNum) + cStart_Base10);\n    return formatHex(c_Base10.toString(16));\n  }\n\n  function formatHex(hex) {\n    if (hex.length === 1) {\n      return '0' + hex;\n    } else {\n      return hex;\n    }\n  }\n\n  function isHexColour(string) {\n    var regex = /^#?[0-9a-fA-F]{6}$/i;\n    return regex.test(string);\n  }\n\n  function getHexColour(string) {\n    if (isHexColour(string)) {\n      return string.substring(string.length - 6, string.length);\n    } else {\n      var name = string.toLowerCase();\n\n      if (colourNames.hasOwnProperty(name)) {\n        return colourNames[name];\n      }\n\n      throw new Error(string + ' is not a valid colour.');\n    }\n  } // Extended list of CSS colornames s taken from\n  // http://www.w3.org/TR/css3-color/#svg-color\n\n\n  var colourNames = {\n    aliceblue: \"F0F8FF\",\n    antiquewhite: \"FAEBD7\",\n    aqua: \"00FFFF\",\n    aquamarine: \"7FFFD4\",\n    azure: \"F0FFFF\",\n    beige: \"F5F5DC\",\n    bisque: \"FFE4C4\",\n    black: \"000000\",\n    blanchedalmond: \"FFEBCD\",\n    blue: \"0000FF\",\n    blueviolet: \"8A2BE2\",\n    brown: \"A52A2A\",\n    burlywood: \"DEB887\",\n    cadetblue: \"5F9EA0\",\n    chartreuse: \"7FFF00\",\n    chocolate: \"D2691E\",\n    coral: \"FF7F50\",\n    cornflowerblue: \"6495ED\",\n    cornsilk: \"FFF8DC\",\n    crimson: \"DC143C\",\n    cyan: \"00FFFF\",\n    darkblue: \"00008B\",\n    darkcyan: \"008B8B\",\n    darkgoldenrod: \"B8860B\",\n    darkgray: \"A9A9A9\",\n    darkgreen: \"006400\",\n    darkgrey: \"A9A9A9\",\n    darkkhaki: \"BDB76B\",\n    darkmagenta: \"8B008B\",\n    darkolivegreen: \"556B2F\",\n    darkorange: \"FF8C00\",\n    darkorchid: \"9932CC\",\n    darkred: \"8B0000\",\n    darksalmon: \"E9967A\",\n    darkseagreen: \"8FBC8F\",\n    darkslateblue: \"483D8B\",\n    darkslategray: \"2F4F4F\",\n    darkslategrey: \"2F4F4F\",\n    darkturquoise: \"00CED1\",\n    darkviolet: \"9400D3\",\n    deeppink: \"FF1493\",\n    deepskyblue: \"00BFFF\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1E90FF\",\n    firebrick: \"B22222\",\n    floralwhite: \"FFFAF0\",\n    forestgreen: \"228B22\",\n    fuchsia: \"FF00FF\",\n    gainsboro: \"DCDCDC\",\n    ghostwhite: \"F8F8FF\",\n    gold: \"FFD700\",\n    goldenrod: \"DAA520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"ADFF2F\",\n    grey: \"808080\",\n    honeydew: \"F0FFF0\",\n    hotpink: \"FF69B4\",\n    indianred: \"CD5C5C\",\n    indigo: \"4B0082\",\n    ivory: \"FFFFF0\",\n    khaki: \"F0E68C\",\n    lavender: \"E6E6FA\",\n    lavenderblush: \"FFF0F5\",\n    lawngreen: \"7CFC00\",\n    lemonchiffon: \"FFFACD\",\n    lightblue: \"ADD8E6\",\n    lightcoral: \"F08080\",\n    lightcyan: \"E0FFFF\",\n    lightgoldenrodyellow: \"FAFAD2\",\n    lightgray: \"D3D3D3\",\n    lightgreen: \"90EE90\",\n    lightgrey: \"D3D3D3\",\n    lightpink: \"FFB6C1\",\n    lightsalmon: \"FFA07A\",\n    lightseagreen: \"20B2AA\",\n    lightskyblue: \"87CEFA\",\n    lightslategray: \"778899\",\n    lightslategrey: \"778899\",\n    lightsteelblue: \"B0C4DE\",\n    lightyellow: \"FFFFE0\",\n    lime: \"00FF00\",\n    limegreen: \"32CD32\",\n    linen: \"FAF0E6\",\n    magenta: \"FF00FF\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66CDAA\",\n    mediumblue: \"0000CD\",\n    mediumorchid: \"BA55D3\",\n    mediumpurple: \"9370DB\",\n    mediumseagreen: \"3CB371\",\n    mediumslateblue: \"7B68EE\",\n    mediumspringgreen: \"00FA9A\",\n    mediumturquoise: \"48D1CC\",\n    mediumvioletred: \"C71585\",\n    midnightblue: \"191970\",\n    mintcream: \"F5FFFA\",\n    mistyrose: \"FFE4E1\",\n    moccasin: \"FFE4B5\",\n    navajowhite: \"FFDEAD\",\n    navy: \"000080\",\n    oldlace: \"FDF5E6\",\n    olive: \"808000\",\n    olivedrab: \"6B8E23\",\n    orange: \"FFA500\",\n    orangered: \"FF4500\",\n    orchid: \"DA70D6\",\n    palegoldenrod: \"EEE8AA\",\n    palegreen: \"98FB98\",\n    paleturquoise: \"AFEEEE\",\n    palevioletred: \"DB7093\",\n    papayawhip: \"FFEFD5\",\n    peachpuff: \"FFDAB9\",\n    peru: \"CD853F\",\n    pink: \"FFC0CB\",\n    plum: \"DDA0DD\",\n    powderblue: \"B0E0E6\",\n    purple: \"800080\",\n    red: \"FF0000\",\n    rosybrown: \"BC8F8F\",\n    royalblue: \"4169E1\",\n    saddlebrown: \"8B4513\",\n    salmon: \"FA8072\",\n    sandybrown: \"F4A460\",\n    seagreen: \"2E8B57\",\n    seashell: \"FFF5EE\",\n    sienna: \"A0522D\",\n    silver: \"C0C0C0\",\n    skyblue: \"87CEEB\",\n    slateblue: \"6A5ACD\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"FFFAFA\",\n    springgreen: \"00FF7F\",\n    steelblue: \"4682B4\",\n    tan: \"D2B48C\",\n    teal: \"008080\",\n    thistle: \"D8BFD8\",\n    tomato: \"FF6347\",\n    turquoise: \"40E0D0\",\n    violet: \"EE82EE\",\n    wheat: \"F5DEB3\",\n    white: \"FFFFFF\",\n    whitesmoke: \"F5F5F5\",\n    yellow: \"FFFF00\",\n    yellowgreen: \"9ACD32\"\n  };\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = Rainbow;\n}","map":null,"metadata":{},"sourceType":"script"}