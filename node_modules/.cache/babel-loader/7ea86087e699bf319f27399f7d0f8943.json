{"ast":null,"code":"var _jsxFileName = \"/Users/Banana/Desktop/GITHUB/Front-End/src/components/uploadpage.jsx\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport { AppRegistry, View, TextInput } from \"react\";\nimport { Button, Segment, Divider, Search, Grid, Header, Dropdown, Form, TextArea, FormButton } from \"semantic-ui-react\";\nvar currentDate = new Date().toLocaleTimeString(); //maybe will use getDate() instead use setInterval() keep updating something\n\nexport default class Uploadpage extends Component {\n  constructor(props) {\n    super(props); //you make your states here\n\n    this.state = {\n      manufacturer: \"\",\n      catalogNumber: \"\",\n      description: \"\",\n      docCreat: \"\",\n      uniqueIdent: \"\",\n      measureEquip: \"\",\n      labratory: \"\",\n      reportNum: \"\",\n      reportData: \"\",\n      reflectionGeom: \"\",\n      transGeom: \"\",\n      bandfwhm: \"\",\n      bandConn: \"\"\n    }; //bind manufactuer\n\n    this.handle_change = this.handle_change.bind(this); //bind catalog number\n\n    this.cnHandle_change = this.cnHandle_change.bind(this); //bind decription\n\n    this.descriptionHandle_change = this.descriptionHandle_change.bind(this); //bind document creator\n\n    this.docCreatHandle_change = this.docCreatHandle_change.bind(this); //bind unique identifier\n\n    this.uniqueIdentHandle_change = this.uniqueIdentHandle_change.bind(this); //bind measurement equipment\n\n    this.measureEquipHandle_change = this.measureEquipHandle_change.bind(this); //bind labratory\n\n    this.labratoryHandle_change = this.labratoryHandle_change.bind(this); //bind report num\n\n    this.reportNumHandle_change = this.reportNumHandle_change.bind(this); //bind report data\n\n    this.reportDataHandle_change = this.reportDataHandle_change.bind(this); //bind reflection geometry\n\n    this.reflectionGeomHandle_change = this.reflectionGeomHandle_change.bind(this); //bind transmission geometry\n\n    this.transGeomHandle_change = this.transGeomHandle_change.bind(this); //bind bandwidth fwhm\n\n    this.bandfwhmHandle_change = this.bandfwhmHandle_change.bind(this); //bind bandwidth connected\n\n    this.bandConnHandle_change = this.bandConnHandle_change.bind(this); //for the submission value\n\n    this.handle_submit = this.handle_submit.bind(this);\n  } //these are your functions\n  //for manufacturer\n\n\n  handle_change(event) {\n    this.setState({\n      manufacturer: event.target.value\n    });\n  } //for catalog number\n\n\n  cnHandle_change(event) {\n    this.setState({\n      catalogNumber: event.target.value\n    });\n  } //for description\n\n\n  descriptionHandle_change(event) {\n    this.setState({\n      description: event.target.value\n    });\n    console.log(this.state.description);\n  } //for document creator\n\n\n  docCreatHandle_change(event) {\n    this.setState({\n      docCreat: event.target.value\n    });\n    console.log(this.state.docCreat);\n  } //for unique identifier\n\n\n  uniqueIdentHandle_change(event) {\n    this.setState({\n      uniqueIdent: event.target.value\n    });\n    console.log(this.state.uniqueIdent);\n  } //for Measurement equipment:\n\n\n  measureEquipHandle_change(event) {\n    this.setState({\n      measureEquip: event.target.value\n    });\n    console.log(this.state.measureEquip);\n  } //for Laboratory:\n\n\n  labratoryHandle_change(event) {\n    this.setState({\n      labratory: event.target.value\n    });\n    console.log(this.state.labratory);\n  } //for Report #\n\n\n  reportNumHandle_change(event) {\n    this.setState({\n      reportNum: event.target.value\n    });\n    console.log(this.state.reportNum);\n  } //for report data\n\n\n  reportDataHandle_change(event) {\n    this.setState({\n      reportData: event.target.value\n    });\n    console.log(this.state.reportData);\n  } //for reflection geometry\n\n\n  reflectionGeomHandle_change(event) {\n    this.setState({\n      reflectionGeom: event.target.value\n    });\n    console.log(this.state.reflectionGeom);\n  } //for transmission geometry\n\n\n  transGeomHandle_change(event) {\n    this.setState({\n      transGeom: event.target.value\n    });\n    console.log(this.state.transGeom);\n  } //for bandwidth fwhm\n\n\n  bandfwhmHandle_change(event) {\n    this.setState({\n      bandfwhm: event.target.value\n    });\n    console.log(this.state.bandfwhm);\n  } //for bandwith corrected\n\n\n  bandConnHandle_change(event) {\n    this.setState({\n      bandConn: event.target.value\n    });\n    console.log(this.state.bandConn);\n  } //for the submission button\n\n\n  handle_submit(event) {\n    alert(\"You submitted the form \" + this.state.manufacturer);\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"formElementDecor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      label: \"Manufacturer:\",\n      type: \"text\",\n      onChange: this.handle_change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      label: \"Catalog Number:\",\n      type: \"number\",\n      onChange: this.cnHandle_change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Description\"), React.createElement(TextArea, {\n      label: \"Description\",\n      placeholder: \"Tell us more\",\n      maxLength: \"255\",\n      onChange: this.descriptionHandle_change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      label: \"Document Creator\",\n      type: \"text\",\n      onChange: this.docCreatHandle_change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      label: \"Unique identifier:\",\n      type: \"text\",\n      onChange: this.uniqueIdentHandle_change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      label: \"Measurement equipment::\",\n      type: \"text\",\n      onChange: this.measureEquipHandle_change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      label: \"Laboratory:\",\n      type: \"text\",\n      onChange: this.labratoryHandle_change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      label: \"Report #:\",\n      type: \"text\",\n      onChange: this.reportNumHandle_change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      label: \"Report data:\",\n      type: \"text\",\n      onChange: this.reportDataHandle_change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      label: \"Reflection geometry:\",\n      type: \"text\",\n      onChange: this.reflectionGeomHandle_change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      label: \"Transmission geometry:\",\n      type: \"text\",\n      onChange: this.transGeomHandle_change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      label: \"bandwidth fwhm:\",\n      type: \"text\",\n      onChange: this.bandfwhmHandle_change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Is the Bandwidth corrected\"), React.createElement(\"select\", {\n      class: \"ui dropdown\",\n      onChange: this.bandConnHandle_change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Select\"), React.createElement(\"option\", {\n      value: \"Yes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Yes\"), React.createElement(\"option\", {\n      value: \"No\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"No\")))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Upload\"), React.createElement(Button, {\n      onClick: this.handle_submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/Banana/Desktop/GITHUB/Front-End/src/components/uploadpage.jsx"],"names":["React","Component","AppRegistry","View","TextInput","Button","Segment","Divider","Search","Grid","Header","Dropdown","Form","TextArea","FormButton","currentDate","Date","toLocaleTimeString","Uploadpage","constructor","props","state","manufacturer","catalogNumber","description","docCreat","uniqueIdent","measureEquip","labratory","reportNum","reportData","reflectionGeom","transGeom","bandfwhm","bandConn","handle_change","bind","cnHandle_change","descriptionHandle_change","docCreatHandle_change","uniqueIdentHandle_change","measureEquipHandle_change","labratoryHandle_change","reportNumHandle_change","reportDataHandle_change","reflectionGeomHandle_change","transGeomHandle_change","bandfwhmHandle_change","bandConnHandle_change","handle_submit","event","setState","target","value","console","log","alert","preventDefault","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Component } from \"react\";\nimport { AppRegistry, View, TextInput } from \"react\";\nimport {Button, Segment, Divider, Search, Grid, Header, Dropdown, Form, TextArea, FormButton} from \"semantic-ui-react\";\n\nvar currentDate = new Date().toLocaleTimeString(); //maybe will use getDate() instead use setInterval() keep updating something\n\nexport default class Uploadpage extends Component {\n  constructor(props) {\n    super(props);\n    //you make your states here\n    this.state = {\n      manufacturer: \"\",\n      catalogNumber: \"\",\n      description: \"\",\n      docCreat: \"\",\n      uniqueIdent: \"\",\n      measureEquip: \"\",\n      labratory: \"\",\n      reportNum: \"\",\n      reportData: \"\",\n      reflectionGeom: \"\",\n      transGeom: \"\",\n      bandfwhm: \"\",\n      bandConn: \"\"\n    };\n\n    //bind manufactuer\n    this.handle_change = this.handle_change.bind(this);\n    //bind catalog number\n    this.cnHandle_change = this.cnHandle_change.bind(this);\n    //bind decription\n    this.descriptionHandle_change = this.descriptionHandle_change.bind(this);\n    //bind document creator\n    this.docCreatHandle_change = this.docCreatHandle_change.bind(this);\n    //bind unique identifier\n    this.uniqueIdentHandle_change = this.uniqueIdentHandle_change.bind(this);\n    //bind measurement equipment\n    this.measureEquipHandle_change = this.measureEquipHandle_change.bind(this);\n    //bind labratory\n    this.labratoryHandle_change = this.labratoryHandle_change.bind(this);\n    //bind report num\n    this.reportNumHandle_change = this.reportNumHandle_change.bind(this);\n    //bind report data\n    this.reportDataHandle_change = this.reportDataHandle_change.bind(this);\n    //bind reflection geometry\n    this.reflectionGeomHandle_change = this.reflectionGeomHandle_change.bind(\n      this\n    );\n    //bind transmission geometry\n    this.transGeomHandle_change = this.transGeomHandle_change.bind(this);\n    //bind bandwidth fwhm\n    this.bandfwhmHandle_change = this.bandfwhmHandle_change.bind(this);\n    //bind bandwidth connected\n    this.bandConnHandle_change = this.bandConnHandle_change.bind(this);\n\n    //for the submission value\n    this.handle_submit = this.handle_submit.bind(this);\n  }\n\n  //these are your functions\n\n  //for manufacturer\n  handle_change(event) {\n    this.setState({ manufacturer: event.target.value });\n  }\n  //for catalog number\n  cnHandle_change(event) {\n    this.setState({ catalogNumber: event.target.value });\n  }\n\n  //for description\n  descriptionHandle_change(event) {\n    this.setState({ description: event.target.value });\n    console.log(this.state.description);\n  }\n\n  //for document creator\n  docCreatHandle_change(event) {\n    this.setState({ docCreat: event.target.value });\n    console.log(this.state.docCreat);\n  }\n\n  //for unique identifier\n  uniqueIdentHandle_change(event) {\n    this.setState({ uniqueIdent: event.target.value });\n    console.log(this.state.uniqueIdent);\n  }\n\n  //for Measurement equipment:\n  measureEquipHandle_change(event) {\n    this.setState({ measureEquip: event.target.value });\n    console.log(this.state.measureEquip);\n  }\n\n  //for Laboratory:\n  labratoryHandle_change(event) {\n    this.setState({ labratory: event.target.value });\n    console.log(this.state.labratory);\n  }\n\n  //for Report #\n  reportNumHandle_change(event) {\n    this.setState({ reportNum: event.target.value });\n    console.log(this.state.reportNum);\n  }\n\n  //for report data\n  reportDataHandle_change(event) {\n    this.setState({ reportData: event.target.value });\n    console.log(this.state.reportData);\n  }\n\n  //for reflection geometry\n  reflectionGeomHandle_change(event) {\n    this.setState({ reflectionGeom: event.target.value });\n    console.log(this.state.reflectionGeom);\n  }\n\n  //for transmission geometry\n  transGeomHandle_change(event) {\n    this.setState({ transGeom: event.target.value });\n    console.log(this.state.transGeom);\n  }\n\n  //for bandwidth fwhm\n  bandfwhmHandle_change(event) {\n    this.setState({ bandfwhm: event.target.value });\n    console.log(this.state.bandfwhm);\n  }\n\n  //for bandwith corrected\n  bandConnHandle_change(event) {\n    this.setState({ bandConn: event.target.value });\n    console.log(this.state.bandConn);\n  }\n\n  //for the submission button\n  handle_submit(event) {\n    alert(\"You submitted the form \" + this.state.manufacturer);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div id=\"form\">\n        \n\n        <Form>\n          <div class=\"formElementDecor\">\n          <Form.Input\n            label=\"Manufacturer:\"\n            type=\"text\"\n            onChange={this.handle_change}\n          />\n          <br></br>\n          <Form.Input\n            label=\"Catalog Number:\"\n            type=\"number\"\n            onChange={this.cnHandle_change}\n          />\n          {/* <Form.Input label='Description:' type='text' maxLength =\"255\" rows=\"4\" onChange={this.descriptionHandle_change} /> */}\n          <label>Description</label>\n          <TextArea\n            label=\"Description\"\n            placeholder=\"Tell us more\"\n            maxLength=\"255\"\n            onChange={this.descriptionHandle_change}\n          />\n          <Form.Input\n            label=\"Document Creator\"\n            type=\"text\"\n            onChange={this.docCreatHandle_change}\n          />\n          <Form.Input\n            label=\"Unique identifier:\"\n            type=\"text\"\n            onChange={this.uniqueIdentHandle_change}\n          />\n          <Form.Input\n            label=\"Measurement equipment::\"\n            type=\"text\"\n            onChange={this.measureEquipHandle_change}\n          />\n          <Form.Input\n            label=\"Laboratory:\"\n            type=\"text\"\n            onChange={this.labratoryHandle_change}\n          />\n          <Form.Input\n            label=\"Report #:\"\n            type=\"text\"\n            onChange={this.reportNumHandle_change}\n          />\n          <Form.Input\n            label=\"Report data:\"\n            type=\"text\"\n            onChange={this.reportDataHandle_change}\n          />\n          <Form.Input\n            label=\"Reflection geometry:\"\n            type=\"text\"\n            onChange={this.reflectionGeomHandle_change}\n          />\n          <Form.Input\n            label=\"Transmission geometry:\"\n            type=\"text\"\n            onChange={this.transGeomHandle_change}\n          />\n          <Form.Input\n            label=\"bandwidth fwhm:\"\n            type=\"text\"\n            onChange={this.bandfwhmHandle_change}\n          />\n          <label>Is the Bandwidth corrected</label>\n          <select class=\"ui dropdown\" onChange={this.bandConnHandle_change}>\n            <option value=\"\">Select</option>\n            <option value=\"Yes\">Yes</option>\n            <option value=\"No\">No</option>\n          </select>\n          </div>\n        </Form>\n\n        <br />\n        <Button>Upload</Button><Button onClick={this.handle_submit}>Submit</Button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}